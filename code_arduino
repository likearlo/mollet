#include <Wire.h>
#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>
#include <SPI.h>
#include <SD.h>

#define SD_CS_PIN 4 // Broche CS de la carte SD

Adafruit_MPU6050 mpu;
File dataFile;
const int nombreEchantillons = 20;
int valeursRepos[nombreEchantillons];
int index = 0;
int somme = 0;
int moyenneRepos = 0;
float i = 0.0;

void setup() {
  Serial.begin(9600);
  Serial.println(F("Initialize System"));
  Serial.println("Calcul de la valeur de repos...");
  delay(1000); // temps de positionner le capteur

  for (int i = 0; i < nombreEchantillons; i++) {
    valeursRepos[i] = analogRead(A6);
    delay(50);
  }

  for (int i = 0; i < nombreEchantillons; i++) {
    somme += valeursRepos[i];
  }
  moyenneRepos = somme / nombreEchantillons;
  Serial.print("Valeur de repos calculée : ");
  Serial.println(moyenneRepos);

  if (!mpu.begin(0x68)) {
    Serial.println("Failed to find MPU6050 chip");
    while (1) {
      delay(10);
    }
  }

  mpu.setAccelerometerRange(MPU6050_RANGE_16_G);
  mpu.setGyroRange(MPU6050_RANGE_250_DEG);
  mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);

  // Initialisation de la carte SD
  if (!SD.begin(SD_CS_PIN)) {
    Serial.println("Erreur lors de l'initialisation de la carte SD.");
    return;
  }

  // Création d'un nouveau fichier sur la carte SD
  dataFile = SD.open("data.txt", FILE_WRITE);
  if (!dataFile) {
    //Serial.println("Erreur lors de l'ouverture du fichier.");
    return;
  }

  // Écriture de l'en-tête dans le fichier
  //dataFile.println("Acceleration X,Acceleration Y,Acceleration Z,Rotation X,Rotation Y,Rotation Z,Temperature,EMG");
  dataFile.close();
}


void loop() {
  readMPU();
  delay(100);
}

void readMPU() {
  sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);

  int valeurBrute = analogRead(A6);

  // Appliquer la fonction d'étalonnage
  int valeurEtalonnee = valeurBrute - moyenneRepos;
  if (valeurEtalonnee < 0) {
    valeurEtalonnee = 0;
  }

  // Affichage des valeurs sur le moniteur série
  Serial.println(valeurEtalonnee);

  dataFile = SD.open("data.txt", FILE_WRITE);
  if (!dataFile) {
    //Serial.println("Erreur lors de l'ouverture du fichier.");
    return;
  }

  // Écriture des valeurs dans le fichier sur la carte SD
  dataFile.print(i);
  dataFile.print(",");
  dataFile.print(a.acceleration.x);
  dataFile.print(",");
  dataFile.print(a.acceleration.y);
  dataFile.print(",");
  dataFile.print(a.acceleration.z);
  dataFile.print(",");
  dataFile.print(g.gyro.x);
  dataFile.print(",");
  dataFile.print(g.gyro.y);
  dataFile.print(",");
  dataFile.print(g.gyro.z);
  dataFile.print(",");
  dataFile.print(temp.temperature);
  dataFile.print(",");
  dataFile.print(valeurEtalonnee);
  dataFile.println();
  dataFile.close();
  i += 0.1;
}